name: Build & Deploy Images

on: # yamllint disable-line rule:truthy
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: "build"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr
            # short commit hash
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: server/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_VERSION_HASH=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-latest:
    name: Deploy :latest to Server
    runs-on: ubuntu-latest
    environment: 20warren.alexwendland.com
    needs: build
    steps:
      - name: SSH into deployment server and restart service
        run: |
          echo "${{ secrets.SSH_DEPLOY_KEY }}" > deploy_key
          chmod 600 deploy_key
          ssh -o StrictHostKeyChecking=no -i deploy_key ${{ secrets.SSH_DEPLOY_USER }}@${{ secrets.SSH_DEPLOY_HOST }} << EOF
              echo "${{ secrets.GH_PAT_READ_PACKAGES }}" | podman login ghcr.io -u ${{ secrets.GH_PAT_USERNAME }} --password-stdin
              podman pull ghcr.io/${{ github.repository }}:latest
              systemctl restart container-iot-doorman.service
          EOF
